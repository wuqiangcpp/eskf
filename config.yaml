filter_method: ESKF

#imu binary file format:sequential 7 double including time, angle_velocity (rad/s), linear_accel(m/s^2).
#gps binary file format:sequential 4 double including time, gps latidtude (degree), longtitude (degree), altitude (m).
input_file:
  imu: "imu.bin"
  gps: "gps.bin"

#binary format:  sequential 8 doubles including time, position and quaternian
output_file: "fused.bin"

#imu sampling frequency
imu_freq: 100

verbose: 0

#earth:
#  rotation_speed: 7.272205216e-05
#  gravity: 9.79484197226504
#  latitude: 32
#  longtitude: 120

earth:
  rotation_speed: 0
  gravity: 9.79484197226504
  latitude: 32
  longtitude: 120

#if ref_lla_input is false, the start gps sample is taken as reference, otherwise ref_lla  is taken.
#ref_lla: reference point latitude,longitude,altitude, the local enu frame axis at this point 
#           is chosen as the global frame axis if ref_lla_input is true
ref_lla_input: true
ref_lla:
  lat: 32
  lon: 120
  alti: 0

#integration time segment, end_time=-1 means the end time is unlimited
start_time: 0
end_time: -1

#gps antenna coordinates in imu body frame
L_gps:
  x: 0
  y: 0
  z: 0

#initial velocity (enu frame, m/s) and orientation (zyx convention in frame enu, degree)
#initial position is taken as origin, i.e., the enu frame at reference point is parallelly shifted to the starting point
initial_state:
  velocity: 
      x: 10
      y: 0
      z: 0
  orientation:
      z: 0
      y: 0
      x: 0 
# prior
#   posi, vel, ori: position, velocity, oritation uncertainty;
#   epsilon: gyro_noise,  delta: accel_noise
# process
#   vel: velocity noise  
#   ori: oritation noise
#   gyro: gyro bias noise
#   accel: accel bias noise
covariance:
  prior:
    posi: 1.0e-4
    vel: 1.0e-4
    ori: 1.0e-2
    epsilon: 1.0e-6
    delta: 1.0e-6
    gravity: 0.0
  process:
    vel: 1.0e-10
    ori: 1.0e-8
    gyro_bias: 0
    accel_bias: 0
  measurement:
    posi: 100
